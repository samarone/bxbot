<?xml version="1.0"?>
<!--

Trading Strategy config.

You configure the loading of your strategy using either a <class-name> or a <bean-name>.

See the README "How do I write my own Trading Strategy?" section for full details.
All elements are mandatory unless stated otherwise.
Multiple strategy elements can be listed.

-->
<trading-strategies>
    <strategy>

        <!--
        A unique identifier for the strategy. The markets.xml <trading-strategy-id> entries reference this.
        Value must be an alphanumeric string. Underscores and dashes are also permitted. E.g. my-macd-strat-1
        -->
        <id>scalping-strategy</id>

        <!--
        A friendly name for the strategy. The is used in the logs and by BX-bot UI to display the strategy's name.
        Value must be an alphanumeric string. Spaces are allowed. E.g. My Super MACD Strat
        -->
        <name>Basic Scalping Strat</name>

        <!--
        The <description> value is optional. This is used by BX-bot UI.
        -->
        <description>A simple trend following scalper that buys at the current BID price, holds until current market price has reached a configurable minimum percentage gain, and then sells at current ASK price, thereby taking profit from the spread. Don't forget to factor in the exchange fees!</description>

        <!--
        For the <class-name> value, you must specify the fully qualified name of your Strategy class for the Trading Engine
        to load and execute. This class must be on the runtime classpath.
        If you set this value to load your strategy, you cannot set the <bean-name> value.
        -->
        <!--<class-name>com.gazbert.bxbot.strategies.ExampleScalpingStrategy</class-name>-->

        <!--
        For the <bean-name> value, you must specify the Spring bean name of you Strategy component class
        for the Trading Engine to load and execute.
        You will also need to annotate your strategy class with `@Component("exampleScalpingStrategy")` -
        take a look at ExampleScalpingStrategy.java. This results in Spring injecting the bean.
        (see https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/stereotype/Component.html)
        If you set this value to load your strategy, you cannot set the <class-name> value.
        -->
        <bean-name>exampleScalpingStrategy</bean-name>

        <!--
        The <optional-config> section is optional and allows you to set custom key/value pair config items. This config
        is passed to your Trading Strategy when the bot starts up.
        -->
        <optional-config>
            <config-item>
                <name>counter-currency-buy-order-amount</name>
                <value>10</value>
            </config-item>
            <config-item>
                <name>minimum-percentage-gain</name>
                <value>3</value>
            </config-item>
        </optional-config>
    </strategy>
</trading-strategies>
